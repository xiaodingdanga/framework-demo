server:
  port: 8080
  servlet:
    context-path: /
spring:
  application:
    name: demo1
  datasource:
    url: jdbc:mysql://localhost:3306/test?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
#  datasource:
#    driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver
#    url: jdbc:shardingsphere:classpath:sharding.yaml
  data:
    redis:
      #单机
      host: localhost
      port: 6379
      password: 123456
      database: 0
#      # redis哨兵配置
#      sentinel:
#        # 主节点名称
#        master: mymaster
#        nodes:
#          - 127.0.0.1:26379
#          - 127.0.0.1:26380
#          - 127.0.0.1:26381
      # 集群的部署方式
#      cluster:
#        nodes:
#          - 127.0.0.1:6380
#          - 127.0.0.1:6381
#          - 127.0.0.1:6382
#          - 127.0.0.1:6383
#          - 127.0.0.1:6384
#          - 127.0.0.1:6385
#        # #最大重定向次数（由于集群中数据存储在多个节点,所以在访问数据时需要通过转发进行数据定位）
#        max-redirects: 3
      # Lettuce连接池
      lettuce:
        pool:
          # 最小空闲连接
          min-idle: 5
          # 最大空闲连接
          max-idle: 10
          # 最大连接数
          max-active: 100
          # 连接分配应该阻塞的最大时间
          max-wait: 2000
        read-mode: replica
        #集群拓扑刷新配置
#        cluster:
#          refresh:
#            period: 10s
#            adaptive: true

  # 配置rabbitmq
  rabbitmq:
    # 主机ip，修改成实际rabbitmq配置
    host: 127.0.0.1
    # 端口，修改成实际rabbitmq配置
    port: 5672
    # 用户名，修改成实际rabbitmq配置
    username: guest
    # 用户密码，修改成实际rabbitmq配置
    password: guest
    # 虚拟host可以不设置，默认配置写virtual-host: /
    virtual-host: /
    # 开启confirm模式，确认消息已发送到交换机
    publisher-confirm-type: correlated
    # 以开启Return模式，确认消息已发送到队列
    publisher-returns: true
#    # 如果消息没有送达queue 默认为false直接丢弃失败数据，true将失败消息发送给回调函数
#    template:
#      mandatory: true
    # 设置消费端手动ack
    listener:
      simple:
        acknowledge-mode: manual
        retry:
          # 开启消息重发机制
          enabled: true
          # 重试次数3
          max-attempts: 3
          #消费者重试间隔次数 2s
          initial-interval: 2000

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:com/lx/framework/demo1/project/mapper/xml/*.xml
logging:
  config: classpath:log4j2.xml
  #配置mybatis打印sql语句
  level:
    com.lx.framework.demo1.user.mapper: debug
    io.lettuce.core: DEBUG
dynamic:
  datasource:
    enabled: false
encrypt:
  algorithm: SM4
sm4:
  public:
    key: 7210518927313387

